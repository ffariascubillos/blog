// migra todos los archivos de migracion 
// metodo up()

php artisan migrate


// crear una migracion nueva

php artisan make:migration cursos


// volver a una version anterior de la tabla migration -> batch (lote)

php artisan migrate:rollback


// Crear migracion mas rapido

php artisan make:migration create_cursos_table


// Elimina todas las tablas y las vuelve a cargar 
// ejecuta el metodo down en cada archivo php de tipo migracion 

php artisan migrate:fresh


// agrega nuevo campo a la tabla sin Eliminar estas
// parecido a fresh pero no destructivo

php artisan make:migration add_avatar_to_users_table


// ORM = Object Relational Mapping


// Crear un nuevo modelo

 php artisan make:model Curso

// ingresar a tinker

php artisan tinker

// usar modelo para agreagar un registro

use App\Models\Curso;
$curso = new Curso;
$curso->name = 'Laravel';
$curso->descripcion = "El mejor framework de PHP";
$curso                      // imprime el objeto curso creado anteriormente
$curso->save();             // guarda el registro en la tbl


// Seeders

// crea un nuevo seeder

php artisan make:seeder CursoSeeder

// crea un registro dentro de un seeder

php artisan db:seed

// hacela corta con lo de arriba

php artisan migrate:fresh --seed

// para migrar todo desde un repo

php artisan migrate --seed


// factories para llenar tablas con datos de prueba

php artisan make:factory CursosFactory
// configurar archivos factory y seeders
php artisan migrate:fresh --seed


// Generador de consultas eloquent

php artisan tinker
> use App\Models\Curso      // modelo a usar
> $curso = Curso::all();    // lista todos los cursos
> $curso = Curso::where('categoria','Desarollo web')->get();                            // lista los el. segun condicion "where"
> $curso = Curso::where('categoria','Desarollo web')->orderBy('id', 'desc')->get();     // ordenar por id de manera descendiente
> $curso = Curso::where('categoria','Desarollo web')->orderBy('name','asc')->get();     // ordena los nombres de manera ascendente
> $curso = Curso::where('categoria','Desarollo web')->orderBy('id', 'desc')->first();   // obten el primer registro
> $cursos = Curso::select('name', 'descripcion')->get();                                // obtiene name y descripcion de cursos
> $cursos = Curso::select('name', 'descripcion')->orderBy('name', 'asc')->get();        // name y desc. de forma ascendente
> $cursos = Curso::select('name', 'descripcion')->orderBy('name', 'asc')->where('categoria','Desarrollo de Software')->get();        // name y desc. de forma ascendente de la categoria Desarrollo de Software
> $cursos = Curso::select('name as title', 'descripcion')->orderBy('name', 'asc')->where('categoria','Desarrollo de Software')->get();      // Cambiar propiedad name -> title
> $cursos = Curso::select('name as title', 'descripcion')->orderBy('name', 'asc')->where('categoria','Desarrollo de Software')->take(5)->get();     // devuelve 5 registros con las condiciones de arriba jaja XD
> $curso = Curso::where('name','Et pariatur dolor consequatur.')->get();        // devuelve un nombre especifico

// Acceder al curso

$curso = Curso::where('name','Et pariatur dolor consequatur.')->first();
$curso->name;

$curso = Curso::where('id',5)->first()  =>  $curso = Curso::find(5);     // find es lo mismo que where, vemos como reducimos el codigo

// Me devuelve los registros mayores a 45

$curso = Curso::where('id','>',45)->get();      // '>' mayor que, '>=' mayor igual que, '<' menor que, '<=' menor igual que, '<>' diferente que
$curso = Curso::where('name','like','% Sapiente %')->get();   // que tenga coincidencia con la palabra "palabra", % no importa si hay algo atras o delante %


15. Mutadores y Accesores

// Consultar path "app/Models/User.php"

 use App\Models\User
 $user = new User()
 $user = User::latest()->first();   // selecciona el ultimo registro de la tabla

 

 // http://desarrollo.test/blog/public/cursos?page=3